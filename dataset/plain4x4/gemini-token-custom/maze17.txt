<PATH_START> (3,3) (3,2) (3,1) (3,0) (2,0) (1,0) (1,1) (1,2) (1,3) <PATH_END>

We start from the target and go backwards following the adjacency list until we reach the origin.

(3,3) has two adjacent cells (3,2) and (2,3), we choose (3,2) because it is closer to the origin.
(3,2) has two adjacent cells (3,1) and (3,3), we choose (3,1) because it is closer to the origin.
(3,1) has two adjacent cells (3,0) and (3,2), we choose (3,0) because it is closer to the origin.
(3,0) has two adjacent cells (2,0) and (3,1), we choose (2,0) because it is closer to the origin.
(2,0) has three adjacent cells (1,0), (3,0) and (2,1), we choose (1,0) because it is closer to the origin.
(1,0) has two adjacent cells (1,1) and (2,0), we choose (1,1) because it is closer to the origin.
(1,1) has two adjacent cells (1,0) and (1,2), we choose (1,2) because it is closer to the origin.
(1,2) has two adjacent cells (1,1) and (1,3), we choose (1,3) because it is closer to the origin.
(1,3) has two adjacent cells (1,2) and (0,3), we choose (0,3) because it is closer to the origin.
(0,3) has two adjacent cells (1,3) and (0,2), we choose (0,2) because it is closer to the origin.
(0,2) has two adjacent cells (0,1) and (0,3), we choose (0,1) because it is closer to the origin.
(0,1) has two adjacent cells (0,0) and (0,2), we choose (0,0) because it is the origin.

To check if the solution does not cross any walls and path uses only adjacent cells, we can check if each pair of adjacent cells in the path is connected in the adjacency list.

(3,3) and (3,2) are connected
(3,2) and (3,1) are connected
(3,1) and (3,0) are connected
(3,0) and (2,0) are connected
(2,0) and (1,0) are connected
(1,0) and (1,1) are connected
(1,1) and (1,2) are connected
(1,2) and (1,3) are connected
(1,3) and (0,3) are connected
(0,3) and (0,2) are connected
(0,2) and (0,1) are connected
(0,1) and (0,0) are connected

Therefore, the solution does not cross any walls and path uses only adjacent cells.