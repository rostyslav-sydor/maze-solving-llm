**Depth First Search (DFS):** 

DFS is a recursive algorithm which searches in depth by following all possible routes from a given node before backtracking to find other possible routes, if any. 

For a maze, we can apply DFS starting from the origin and exploring all the possible paths until we reach the target. We can use a stack to keep track of the visited nodes and the path taken so far. Each time we reach a dead end we backtrack to the last visited node and continue our exploration from there.

**Steps**:
* Initialize a stack with the starting node.
* While there are unexplored nodes in the stack:
    * Pop the top node from the stack.
    * Mark the node as visited.
    * If the target node is found return the current path in the stack.
    * Otherwise, push all unvisited adjacent nodes from the current node and update the current path to the newly pushed node.

**Solution for the maze in the example**:

<PATH_START> (0,0) (0,1) (0,2) (0,3) (1,3) (2,3) (3,3) <PATH_END>