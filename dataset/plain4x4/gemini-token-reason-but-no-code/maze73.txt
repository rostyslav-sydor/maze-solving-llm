**Reasoning:**

1. Find the starting point and the ending point of the maze.
2. Use breadth-first search to find a path from the starting point to the ending point.
3. Output the path found in the format of coordinate list.

**Solution:**

Starting point: (0,0)
Ending point: (3,3)

Breadth-first search algorithm:

1. Initialize a queue with the starting point.
2. While the queue is not empty do
    - Dequeue the first element from the queue.
    - If the dequeued element is the ending point then stop.
    - Else, for each neighbor of the dequeued element do
        - If the neighbor is not visited then enqueue the neighbor.
3. If the queue is empty then there is no path from the starting point to the ending point.

Path found:

<PATH_START> (0,0) (0,1) (0,2) (0,3) (1,3) (2,3) (3,3) <PATH_END>