We can solve this maze using Depth-First-Search(DFS) or Breath-First-Search(BFS) algorithm with the goal to find a path from the origin to the target in a graph.
 
The main idea of DFS or BFS is to start from the origin and traverse through all possible paths until the target is found.
 
In case of the DFS algorithm we recursively traverse through the graph by selecting an edge that leads from the current node to an unvisited node.
If all edges from the current node are visited then we backtrack to the previous node.
We can represent the traversal using the stack, which is last in first out datastructure.

In case of the BFS algorithm we first select all edges that lead from the current node and add them to the queue, which is first in first out datastructure.
Then we select a the first edge from the queue and continue to traverse as in the case of DFS.

In the provided maze we will traverse through the nodes starting from (0,0) until we reach the target (4,4).
 
The solution to this maze is:
 
<PATH_START> (0,0) (0,1) (1,1) (1,2) (1,3) (1,4) (2,4) (3,4) (4,4) <PATH_END>