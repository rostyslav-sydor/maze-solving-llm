The problem is solved by using Depth First Search (DFS) algorithm.
DFS is a recursive algorithm that traverses a tree by going as far as possible along each branch before backtracking.
In the case of a maze, we can use DFS to find a path from the starting point to the ending point.

To implement DFS, we can use a stack to keep track of the nodes that we have visited.
We start by pushing the starting point onto the stack.
Then, we repeatedly pop the top node from the stack and visit it.
If the node is the ending point, then we have found a solution.
Otherwise, we push all of the node's unvisited neighbors onto the stack and continue.

In the case of the given maze, the DFS algorithm will find the following path from the starting point (0,0) to the ending point (4,4):

<PATH_START> (0,0) (0,1) (0,2) (0,3) (1,3) (1,2) (1,1) (2,1) (3,1) (3,0) (3,2) (4,2) (4,1) (4,0) (4,4) <PATH_END>