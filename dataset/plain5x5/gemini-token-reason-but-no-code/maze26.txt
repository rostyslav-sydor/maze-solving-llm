Depth First Search is a graph traversal algorithm using stack (LIFO). It always explores every possible route until there is no other route for a node. Only then it will backtrack to the previous node and do same process. To solve the maze with this algorithm is quite intuitive and straight-forward: start at the entry point, and mark it as visited. Then for every unvisited neighbor do:

1. Push current node to stack
2. Go explore that neighbor
3. If there is no way out, pop the current node and backtrack the previous visited node by removing the top entry in stack.
4. Repeat until back to starting node in the stack

With this algorithm, a single solution will be found.

In the provided maze example:
1. start @ <ORIGIN_START> (0,0)
2. Push (0,0)
3. Only available unvisited neighbor is (0,1)
4. Push (0,0)
5. Push (0,1)
6. Only available unvisited neighbor is (0,2)
7. Push (0,1)
8. Push (0,2)
9. Only available unvisited neighbor is (0,3)
10. Push (0,2)
11. Push (0,3)
12. Only available unvisited neighbor is (1,3)
13. Push (0,3)
14. Push (1,3)
15. Only available unvisited neighbor is (1,4)
16. Push (1,3)
17. Push (1,4)
18. dead end, backtrack -> Pop (1,4)
19. Pop (1,3)
20. Pop (0,3)
21. Only available unvisited neighbor is (0,4)
22. Push (0,3)
23. Push (0,4)
24. dead end, backtrack -> Pop (0,4)
25. Pop (0,3)
26. dead end, backtrack -> Pop (0,3)
27. Pop (0,2)
28. Pop (0,1)
29. Pop (0,0)

Finally, the solution path between entry and exit:
<PATH_START> (0,0) (0,1) (0,2) (0,3) (1,3) (1,4) (4,4) <PATH_END>